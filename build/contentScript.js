(function(i){typeof define=="function"&&define.amd?define(i):i()})(function(){let i="AutoRefresher",_="Auto refresher",g=`${i}-panel`,l=`${i}-agent`,s="Auto refresher";var E=(e=>(e.settingsChange="settingsChange",e))(E||{});function d(){return localStorage.getItem(s)||localStorage.setItem(s,JSON.stringify({enabled:!1,logEnabled:!0,refreshDelayMs:5e3,selectors:[".resale-item-action > .button > a"]})),JSON.parse(localStorage.getItem(s))}function t(e,...o){e.logEnabled&&console.log(`[[ ${_} ]] -`,...o)}let a=null;function u(e){switch(e.type){case"init":let o=d();window.postMessage({source:l,payload:o,type:E.settingsChange},"*"),t(o,"received init message!");return;case"saveSettings":let{payload:n}=e;t(n,"settings changed",e.payload),a&&!n.enabled&&(t(n,"clearing current timeout",a),clearTimeout(a),a=null),localStorage.setItem(s,JSON.stringify(n)),window.postMessage({payload:n,source:l,type:E.settingsChange},"*"),!a&&n.enabled&&!e.reload&&(t(n,"start working after enable"),N()),e.reload&&location.reload();return}}function N(){let e=d();if(t(e,"window loaded with settings",e),!e.enabled){t(e,"not enabled, doing nothing");return}t(e,"extension is enabled"),t(e,"this page is targeted with these selectors",e.selectors);function o(){for(let r of e.selectors){let c=document.querySelector(r);if(c)return t(e,"found a candidate",c),c}t(e,"did not find any candidate for all selectors",e.selectors)}function n(){let r=o();r?(t(e,"clicking on candidate",r),r.click()):(t(e,"scheduling refresh in",e.refreshDelayMs),a=setTimeout(()=>{t(e,"refreshing page"),location.reload()},e.refreshDelayMs))}n()}window.chrome.runtime.onMessage.addListener(f),window.addEventListener("message",S);function f(e){e.source===g&&u(e)}function S(e){e.source===window&&e.data&&e.data.source===l&&window.chrome.runtime.sendMessage(e.data)}window.addEventListener("load",N)});
